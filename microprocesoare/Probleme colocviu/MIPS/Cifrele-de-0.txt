.data
afisare_n:
	.asciiz "n = "
citire_nr:
	.asciiz "Introduceti numerele: "
produs:
	.asciiz "Numarul de 0 din produs este: "
Negativ:
.asciiz "Ai tastat un numar negativ! Reincearca "
.align 4
tablou:
	.space 100

.text
 main:   li $v0, 4
	la $a0, afisare_n
	syscall
	li $v0, 5    #read integer
	syscall
	move $t0, $v0 #$t0<-n
	bltz $t0, eroare
	li $v0,4
	la $a0, citire_nr
	syscall
	li $t1, 0   #cate nr am div cu 2
	li $t7, 0 #cate nr am div cu 5
	li $t2, 2
	li $t3,5
	la $t8, tablou		#t8<-adresa tablou
	
citeste:
    
	li $v0, 5
	syscall
	sw $v0, ($t8)
	move $t9, $v0
daca_div2:
		div $t9, $t2 #nr citit/2
		mfhi $t4 #t4 am rest
		mflo $t9 #t5 catul 
		bnez $t4, continua #restul nu este 0 deci nu e divizibil
		addi $t1, $t1, 1 
	    bnez $t9, daca_div2
	
continua: lw $v0, ($t8) #verific daca e divizibil cu 5 acelasi numar
        move $t9, $v0	
daca_div5:
		div $t9, $t3
		mfhi $t4 #t4 am rest
		mflo $t9 #t5 catul 
		bnez $t4, continua2 #restul nu este 0 deci nu e divizibil
	    addi $t7, $t7, 1
		bnez $t9, daca_div5
continua2:		
	addi $t8, $t8, 4
	addi $t0, $t0, -1
	bgtz $t0, citeste # cat timp mai am de citit
	j afisare
eroare:
    la $a0, Negativ
	li $v0, 4
	syscall
    j main
 
afisare: li $v0, 4
	la $a0, produs
	syscall

cate_0:
	sub $t3, $t1, $t7
	blez $t3, et1 #nr de 0= cate nr div cu 2	
	# puti $t7
	li $v0, 1 		 
	move $a0, $t7
	syscall
	done
et1:
    li $v0, 1 		
	move $a0, $t1
	syscall
	#puti $t1
	done
