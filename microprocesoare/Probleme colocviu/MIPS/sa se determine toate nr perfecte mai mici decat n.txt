#n>1 -se face test
#sa se determine toate nr perfecte mai mici decat n

#int n, d, s=1;
#    cin>>n;
#    if(n<=1) mesaj + cin>>n;
#	 while(n>5)
#	{
#    for(d=2;d<=n/2;d++)
#        if(n%d==0)
#            s=s+d;
#    if(n==s)
#        cout<<n<<" ";
#		 n--;
#    else
#        n--;

	.data
msg1:
	.asciiz "Introduceti n>1:"
msg2:
	.asciiz "Nr introdus este <=1, introduceti alt numar!"
msg3:
	.asciiz " "
	
	.text
	.globl main
main:
	li $v0, 4		#print string
	la $a0, msg1
	syscall
	
	li $v0, 5		#v0=n
	syscall
	move $t3, $v0	#t3=n	

test:
	li $t8, 1
	ble $t3, $t8, eroare	#test n<=1, daca da baga alt nr
	j next
	
eroare:
	li $v0, 4		#print string
	la $a0, msg2
	syscall
	
	li $v0, 5		#v0=n
	syscall
	move $t3, $v0	#t3=n	
	j test
	
next:
	li $t8, 5
	ble $t3, $t8, sfarsit 	#while n>5
	li $t0, 1		#t0=1=suma		
	li $t1, 2		#t1=2=d
	div $t3, $t1
	mflo $t4		#t4=n/2
for:
	bgt $t1, $t4, if 	#for d=2; d<=n/2
	div $t3, $t1		#n/d
	mfhi $t5			#t5=restul
	beqz $t5, suma		#if n%d==0 sari la suma++
	addi $t1, $t1, 1	#d++
	j for

suma:
	add	$t0, $t0, $t1	#suma++
	addi $t1, $t1, 1	#d++
	j for

if:
	beq $t0, $t3, perfect	#daca n=suma => nr e perfect
	
nu_perfect:
	li $v0, 1
	move $a0, $t0
	syscall
	
	sub $t3, $t3, 1
	j next

perfect:
	li $v0, 1
	move $a0, $t0
	syscall
	
	li $v0, 4		#print string
	la $a0, msg3
	syscall
	
	sub $t3, $t3, 1
	j next

sfarsit:
#done